name: Update Kubernetes Versions

on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:  # Allow manual triggers

jobs:
  update-versions:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: github-actions-${{ github.run_id }}

      - name: Configure Azure Credentials
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get EKS versions
        id: eks
        run: |
          echo "EKS Kubernetes versions:"
          # Print raw output for debugging
          echo "Raw EKS API output:"
          aws eks describe-cluster-versions --output json > eks_output.json
          cat eks_output.json
          
          # Process with minimal jq to find issues
          echo "Processed EKS versions:"
          cat eks_output.json | jq -r '.clusterVersions[].version' 2>/dev/null | sort -V | sed 's/^/eks-/' || echo "Error processing EKS JSON"

      - name: Get AKS versions
        id: aks
        run: |
          echo "AKS Kubernetes versions:"
          # Print raw output for debugging
          echo "Raw AKS API output:"
          az aks get-versions --location eastus --output json > aks_output.json
          cat aks_output.json
          
          # Process with minimal jq to find issues
          echo "Processed AKS versions:"
          cat aks_output.json | jq -r '.orchestrators[].orchestratorVersion' 2>/dev/null | sort -V | sed 's/^/aks-/' || echo "Error processing AKS JSON"

      # - name: Create and push tags
      #   uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      #   with:
      #     script: |
      #       const aksVersions = core.getInput('aks_versions').split('\n');
      #       const eksVersions = core.getInput('eks_versions').split('\n');
            
      #       // Create AKS tags
      #       for (const version of aksVersions) {
      #         await github.rest.git.createRef({
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           ref: `refs/tags/aks-${version}`,
      #           sha: context.sha,
      #           force: true
      #         });
      #       }
            
      #       // Create EKS tags
      #       for (const version of eksVersions) {
      #         await github.rest.git.createRef({
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           ref: `refs/tags/eks-${version}`,
      #           sha: context.sha,
      #           force: true
      #         });
      #       } 